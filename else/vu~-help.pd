#N canvas 462 125 559 454 10;
#X obj 4 258 cnv 3 550 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 3 313 cnv 3 550 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 3 366 cnv 3 550 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X obj 125 322 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 3 416 cnv 15 552 21 empty empty empty 20 12 0 14 -233017 -33289
0;
#X obj 131 203 nbx 6 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#N canvas 207 34 366 264 (subpatch) 0;
#X obj 51 101 tgl 42 0 \$0-tgl-s \$0-tgl-r empty 1 8 1 9 -228856 -128992
-262144 0 1;
#X obj 215 68 route dsp;
#X obj 215 37 receive pd;
#N canvas 977 77 379 291 set_color 0;
#X obj 47 30 inlet;
#X obj 147 200 s \$0-cnv;
#X obj 47 83 select 0 1;
#X obj 47 220 s \$0-tgl-r;
#N canvas 0 22 712 637 off 0;
#X obj 490 220 * -1;
#X obj 424 300 +;
#X obj 409 325 +;
#X obj 347 219 * -65536;
#X obj 424 220 * -256;
#X obj 409 356 - 1;
#X obj 390 189 unpack f f f;
#X obj 225 295 +;
#X obj 210 320 +;
#X obj 148 214 * -65536;
#X obj 225 215 * -256;
#X obj 291 215 * -1;
#X obj 210 351 - 1;
#X obj 191 184 unpack f f f;
#X obj 379 423 pack;
#X msg 395 152 124 124 124;
#X msg 203 154 220 220 220;
#X obj 238 121 t b b;
#X obj 238 81 inlet;
#X obj 378 485 outlet;
#X connect 0 0 1 1;
#X connect 1 0 2 1;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 4 0 1 0;
#X connect 5 0 14 1;
#X connect 6 0 3 0;
#X connect 6 1 4 0;
#X connect 6 2 0 0;
#X connect 7 0 8 1;
#X connect 8 0 12 0;
#X connect 9 0 8 0;
#X connect 10 0 7 0;
#X connect 11 0 7 1;
#X connect 12 0 14 0;
#X connect 13 0 9 0;
#X connect 13 1 10 0;
#X connect 13 2 11 0;
#X connect 14 0 19 0;
#X connect 15 0 6 0;
#X connect 16 0 13 0;
#X connect 17 0 16 0;
#X connect 17 1 15 0;
#X connect 18 0 17 0;
#X restore 47 113 pd off;
#X msg 47 180 color \$1 \$2 0;
#X msg 147 131 -4.86997e+06 -1.34937e+07;
#X msg 147 171 color \$1 0 \$2;
#X connect 0 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 6 0;
#X connect 4 0 5 0;
#X connect 4 0 7 0;
#X connect 5 0 3 0;
#X connect 6 0 7 0;
#X connect 6 0 5 0;
#X connect 7 0 1 0;
#X restore 215 165 pd set_color;
#X obj 135 122 r \$0-tgl-s;
#N canvas 121 482 450 300 (subpatch) 0;
#X obj 101 101 cnv 25 40 25 empty \$0-cnv DSP 3 13 0 20 -228856 -128992
0;
#X coords 0 -1 1 1 42 27 1 100 100;
#X restore 51 144 pd;
#X obj 226 139 s \$0-tgl-r;
#X msg 226 115 set \$1;
#X msg 135 177 \; pd dsp \$1;
#N canvas 256 32 278 194 load_check 0;
#X obj 136 53 sig~ 1;
#X obj 74 24 loadbang;
#X obj 136 86 snapshot~;
#X obj 91 52 del 5;
#X obj 136 151 outlet;
#X obj 74 103 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 74 126 switch~;
#X connect 0 0 2 0;
#X connect 1 0 3 0;
#X connect 1 0 5 0;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 3 0 5 0;
#X connect 5 0 6 0;
#X restore 51 72 pd load_check;
#X connect 1 0 3 0;
#X connect 1 0 7 0;
#X connect 2 0 1 0;
#X connect 4 0 8 0;
#X connect 4 0 3 0;
#X connect 7 0 6 0;
#X connect 9 0 0 0;
#X coords 0 -1 1 1 44 72 2 50 100;
#X restore 505 71 pd;
#X obj 125 265 cnv 17 3 40 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 131 138 noise~;
#X text 208 266 signal;
#X text 214 322 float;
#X text 258 266 - signal to analyze;
#X text 122 375 1) float;
#X text 122 391 2) float;
#X text 182 375 - analysis window size in samples (default 1024),
f 53;
#X text 182 391 - hop size in samples (default \, half the window size)
;
#X text 136 284 set <float \, float>;
#X text 258 284 - sets window and hop size in samples;
#N canvas 549 270 817 330 analysis 0;
#X text 15 67 The optional creation arguments are the analysis window
size in samples \, and the 'hop' period (the number of samples between
analyses). The hop size only affects the result output frequency. With
a smaller hop period \, you get more frequent updates.;
#X text 16 142 It's common that both of these parameters are multiples
of the DSP block size \, and that the hop size is a fraction of the
window size \, although none of this is enforced.;
#X text 18 193 Nonetheless \, the shortest output period (hop size)
won't effectively be less than the block size \, and \, obviously \,
the output can only happen at block boundaries \, not in between. Another
constrain is that there is a minimum hop period that depends on the
window size. It'll always be at least one block bigger than 1/32 of
the window size. This is all also true for [env~] \, by the way.;
#X msg 677 194 set 1024;
#X msg 692 224 set 64;
#X obj 677 252 block~ 64;
#N canvas 242 23 357 282 out_rate 0;
#X obj 121 63 b;
#X obj 121 91 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 121 113 sel 0 1;
#X obj 121 141 timer;
#X obj 121 171 *;
#X obj 121 34 inlet;
#X obj 121 211 outlet;
#X obj 158 170 else/sr~ -khz;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 2 1 3 1;
#X connect 3 0 4 0;
#X connect 4 0 6 0;
#X connect 5 0 0 0;
#X connect 7 0 4 1;
#X restore 516 251 pd out_rate;
#X obj 516 280 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X text 575 280 hop size;
#X text 651 164 change block size;
#X obj 471 161 noise~;
#X msg 516 130 set 256 32;
#X text 422 18 The set message changes the analysis parameters and
takes up to 2 arguments \, which are \, like in the object creation
\, the window and hop size. The default values are also the same as
creating the object \, so if you give it only one value for the window
size \, half of it will be the hop size. Note that it won't let you
set the window or hop size to anything smaller than the current block
size.;
#X msg 539 175 set 1024 256;
#X msg 529 152 set 8192 256;
#X text 15 19 The [vu~] has the same structure of [else/rms~] and [else/peak~]
\, both of which inherited it from the [env~] object in Pd Vanilla.
;
#X obj 516 201 else/vu~ 4096;
#X floatatom 526 228 9 0 0 0 - - -, f 9;
#X floatatom 591 227 9 0 0 0 - - -, f 9;
#X connect 3 0 5 0;
#X connect 4 0 5 0;
#X connect 6 0 7 0;
#X connect 10 0 16 0;
#X connect 11 0 16 0;
#X connect 13 0 16 0;
#X connect 14 0 16 0;
#X connect 16 0 6 0;
#X connect 16 0 17 0;
#X connect 16 1 18 0;
#X restore 476 224 pd analysis;
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 -128992 -233080
0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 305 3 pd;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 -128992 -233080
0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 -128992 -233080
0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 -128992 -233080
0;
#X obj 515 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 -128992 -233080
0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 -128992 -233080
0;
#X obj 502 26 cnv 10 10 10 empty empty library 0 6 2 13 -128992 -233080
0;
#X obj 104 40 cnv 4 4 4 empty empty detector 0 28 2 18 -233017 -1 0
;
#X obj 171 40 cnv 4 4 4 empty empty for 0 28 2 18 -233017 -1 0;
#X obj 20 40 cnv 4 4 4 empty empty Amplitude 0 28 2 18 -233017 -1 0
;
#X obj 3 3 cnv 15 301 42 empty empty vu~ 20 20 2 37 -233017 -1 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 2 3 graph;
#X obj 202 40 cnv 4 4 4 empty empty [vu] 0 28 2 18 -233017 -1 0;
#X text 61 88 [vu~] combines [else/rms~] and [else/peak~] to provide
dBFs output to Pd Vanilla's [vu] GUI.;
#X obj 230 202 nbx 6 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 125 343 cnv 17 3 17 empty empty 1 5 9 0 16 -228856 -162280 0
;
#X text 214 343 float;
#X text 258 322 - RMS amplitude value in dBFs;
#X text 258 343 - peak amplitude value in dBFS;
#X obj 346 156 vu 20 80 empty empty -1 -8 0 10 -1 -1 0 0;
#X text 104 202 RMS;
#X text 198 201 Peak;
#X obj 131 225 s \$0-rms;
#X obj 230 223 s \$0-peak;
#X obj 378 159 r \$0-peak;
#X obj 345 134 r \$0-rms;
#X text 376 198 <= [vu];
#X obj 131 178 else/vu~ 1024 128;
#X connect 5 0 42 0;
#X connect 8 0 47 0;
#X connect 34 0 43 0;
#X connect 44 0 39 1;
#X connect 45 0 39 0;
#X connect 47 0 5 0;
#X connect 47 1 34 0;
