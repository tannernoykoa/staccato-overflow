#N canvas 52 22 1017 789 12;
#X floatatom 260 309 5 -1 1 0 - - -, f 5;
#X floatatom 260 369 5 0 1 0 - - -, f 5;
#X obj 164 743 print info;
#X obj 47 743 print gains;
#X obj 131 370 pack 0 0;
#X floatatom 131 309 5 0 0 0 - - -, f 5;
#X floatatom 192 309 5 0 0 0 - - -, f 5;
#X msg 131 402 coords \$1 \$2;
#X text 152 285 coords;
#X msg 260 398 divergence \$1;
#X msg 260 338 pan \$1;
#X obj 155 338 t b f;
#X msg 47 115 read_mapA ./example_mapA_max.json;
#X msg 62 143 read_mapB ./example_mapB_max.json;
#X msg 76 171 write_mapA ./untitled_mapA.json;
#X msg 90 199 write_mapB ./untitled_mapB.json;
#X msg 530 333 gainsmode \$1;
#X obj 530 306 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 530 391 panmode \$1;
#X floatatom 530 363 5 0 2 0 - - -, f 5;
#X msg 531 449 virtualnodetype \$1;
#X obj 531 421 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 532 482 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 532 510 derivednodetype \$1;
#X floatatom 532 601 5 0 0 0 - - -, f 5;
#X msg 532 630 barycentricpower \$1;
#X floatatom 532 542 5 0 100 0 - - -, f 5;
#X msg 532 571 silentnodeweight \$1;
#X obj 47 702 MIAP, f 15;
#X text 16 11 MIAP;
#X text 71 34 by Zachary Seldess;
#X text 325 115 load mapA from JSON file;
#X text 339 143 load mapB from JSON file;
#X text 338 171 save mapA to JSON file;
#X text 352 199 save mapB to JSON file;
#X text 71 12 Manifold-Interface Amplitude Panner (control-rate version)
;
#X text 744 45 <-- look inside;
#X text 551 302 gains mode (lin \, dB) \, default lin;
#X text 579 360 pan mode (lin \, cos \, sqrt) \, default cos;
#X text 553 418 virtual node type (power-pres \, lin) \, default power-pres
;
#X text 552 478 derived node type (power-pres \, lin) \, default lin
;
#X text 580 540 silent node weight \, default 1;
#X text 580 600 barycentric power \, default 1;
#X text 307 307 map A/B pan \, default 0;
#X text 309 368 divergence \, default 0;
#X msg 103 228 dump_mapA;
#X msg 119 257 dump_mapB;
#X text 189 225 dump mapA;
#X text 203 257 dump mapB;
#X text 70 63 based on Meyer Sound's SpaceMap(R) abstract panning tool
;
#N canvas 95 22 507 131 Attributions 0;
#X text 13 13 The MIAP MaxMSP and Pure Data (PD) object suite is based
on Meyer Sound's SpaceMap(R) multi-channel panning feature of CueStation.
SpaceMap and CueStation are trademarks of Meyer Sound Laboratories
\, Incorporated.;
#X restore 576 15 pd Attributions;
#X text 673 664 <-- look inside;
#X text 704 14 <-- look inside;
#X text 641 710 http://www.zacharyseldess.com;
#X text 641 734 distributed under license: http://creativecommons.org/licenses/by/3.0/
, f 44;
#N canvas 48 22 560 301 SpaceMap(R)_links 0;
#X text 23 15 MIAP website:;
#X text 23 76 Meyer Sound's SpaceMap Application:;
#X text 51 183 https://www.meyersound.com/news/2013/steve_ellison_spacemap/
;
#X text 24 140 Steve Ellison's 2013 article on the evolution of SpaceMap
in "Lighting and Sound America":;
#X text 24 221 Meyer Sound Cue Station user guide (see SpaceMap section):
;
#X text 51 250 http://www.meyersound.com/sites/default/files/cuestation_5.2.0_user_guide.5.13.2011.pdf
;
#X text 50 102 http://meyersound.com/products/d-mitri/cuestation/register/index.htm
;
#X text 50 41 http://www.zacharyseldess.com/miap;
#X restore 576 45 pd SpaceMap(R)_links;
#N canvas 44 22 631 833 About_SpaceMap_and_MIAP 0;
#X text 14 15 From Meyer Sound’s CueStation User Guide: “A SpaceMap
design is constructed from two basic elements: nodes and trisets. Nodes
commonly represent the positions of loudspeakers or groups of speakers
\, and may be of several types. Trisets link three nodes together \,
providing the means to distribute signal proportionally among them.”
;
#X text 14 145 Node Types:;
#X text 13 172 Nodes in a map represent single outlets (Speaker Node)
\, groups of outlets (Virtual Node) \, or points of silence (Silent
node). Nodes can also derive their audio from other nodes (Derived
nodes).;
#X text 14 257 Speaker nodes;
#X text 127 257 represent single physical outputs in Meyer Sound’s
Matrix3 and D-Mitri systems. Those outputs can be connected directly
to speakers \, or passed to effects processors and other external devices.
Multiple speaker nodes in a map can be bound to the same physical output
\, if desired. Again there is no inherent relationship between a speaker’s
physical location in real space and it’s location or locations in
mapped space.;
#X text 127 401 represent points in the map that \, if connected to
a Triset \, behave similarly to a Speaker node. In contrast to a Speaker
node \, which sends its panned signal on to a physical output \, signal
panned to a Silent node is simply ignored (i.e. silent). Silent nodes
provide a convenient way to create fade-ins and fade-outs within a
map.;
#X text 20 401 Silent nodes;
#X text 127 514 represent points in the mapped space whose existence
is “virtualized” via weighted links to one ore more of a map’s
Speaker nodes. Signal from linked Speaker nodes is \, by default \,
weighted equally between all Speaker nodes \, though weightings can
be customized to bias the signal of one speaker node over another.
;
#X text 13 514 Virtual nodes;
#X text 127 620 For MIAP panners \, the resulting signal routed to
the linked Speaker nodes can be either power-preserving (the default
setting) or linearly summing.;
#X text 13 686 Derived nodes;
#X text 127 686 as the name implies \, derive their signal from Speaker
nodes. This is the only node type that is not typically part of a Triset
\, and therefore its physical placement in the mapped space has no
functional purpose (aside from visual clarity).;
#X text 127 762 For MIAP panners \, the resulting signal derived from
the linked Speaker nodes can be either power-preserving or linearly
summing (the default setting.).;
#X restore 576 75 pd About_SpaceMap_and_MIAP;
#X text 720 105 <-- look inside;
#N canvas 57 22 668 374 About_Messages 0;
#X text 56 15 divergence;
#X text 155 15 global power-preserving spread (range 0 to 1 \, default
0.);
#X text 112 46 pan;
#X text 155 46 pan between map A and B (range -1 to 1 \, default 0.)
;
#X text 81 78 panmode;
#X text 155 78 curve used to pan between maps: cosine \, square root
\, linear (default linear);
#X text 66 124 gainsmode;
#X text 155 124 output "speaker" gains in linear amplitude or decibel
formats (0 = linear \, 1 = dB \, default 0);
#X text 19 169 virtualnodetype;
#X text 155 169 manner in which virtual nodes route signal to linked
speaker nodes (0 = power-preserving \, 1 = linear \, default 0);
#X text 19 214 derivednodetype;
#X text 155 214 manner in which derived nodes derive signal from linked
speaker nodes (0 = power-preserving \, 1 = linear \, default 1);
#X text 12 260 barycentricpower;
#X text 155 260 raise the barycentric ratios to the specified power
(effectively pushing the point towards the edge of the triset) to give
better dynamic range (range >= 0 \, default 1.), f 62;
#X text 12 323 silentnodeweight;
#X text 155 323 barycentric weight for silent nodes (range >= 0 \,
default 1 [default in Meyer SpaceMap ≈ 3.]), f 62;
#X restore 576 105 pd About_Messages;
#X text 793 74 <-- look inside;
#N canvas 71 22 1319 737 Map_Authoring 0;
#X msg 33 50 node_create 0 1;
#X msg 44 119 node_delete 0 0;
#X msg 60 178 triset_create 0 0 0 1 2;
#X msg 75 240 triset_delete 0 0;
#X obj 33 513 outlet;
#X msg 96 373 link_delete 0 0 1;
#X msg 546 178 node_type 0 \$1 \$2;
#X floatatom 546 81 5 0 0 0 - - -, f 5;
#X floatatom 607 81 5 1 4 0 - - -, f 5;
#X obj 546 142 pack 0 1;
#X obj 570 110 t b f;
#X text 608 54 type;
#X floatatom 706 81 5 0 0 0 - - -, f 5;
#X floatatom 767 81 5 0 0 0 - - -, f 5;
#X obj 706 142 pack 0 1;
#X obj 730 110 t b f;
#X text 760 54 channel;
#X msg 706 178 node_channel 0 \$1 \$2;
#X floatatom 1094 81 5 0 0 0 - - -, f 5;
#X floatatom 1165 81 5 0 0 0 - - -, f 5;
#X obj 1094 142 pack 0 1;
#X obj 1118 110 t b f;
#X msg 1094 178 node_attenuation 0 \$1 \$2;
#X text 1145 54 attenuation;
#X floatatom 884 81 5 0 0 0 - - -, f 5;
#X floatatom 945 81 5 0 0 0 - - -, f 5;
#X obj 909 110 t b f;
#X obj 884 142 pack 0 0 0, f 16;
#X obj 972 110 t b f;
#X text 957 55 x;
#X floatatom 1005 81 5 0 0 0 - - -, f 5;
#X text 1017 55 y;
#X msg 884 178 node_position 0 \$1 \$2 \$3;
#X msg 407 481 node_create 0 0 500 500 -1 2 1 \, node_create 0 1 500
0 1 1 1 \, node_create 0 2 0 0 2 1 1 \, node_create 0 3 -500 500 3
1 1, f 34;
#X msg 407 597 link_create 0 0 1 1 \, link_create 0 0 2 0.5 \, link_create
0 0 3 0.5, f 22;
#X msg 407 555 triset_create 0 0 0 1 2 \, triset_create 0 1 0 2 3,
f 24;
#X text 406 452 EXAMPLE: create two trisets in Map A;
#X text 50 665 map: 0 = A \, 1 = B;
#X text 31 640 NOTES:;
#X text 29 23 CREATE NODE;
#X text 42 94 DELETE NODE;
#X text 58 152 CREATE TRISET;
#X text 166 48 args: map \, id \, x \, y \, chan \, type \, atten;
#X text 192 67 optional args: x \, y \, chan \, type \, atten;
#X text 178 118 args: map \, id;
#X text 256 177 args: map \, triset id \, node id1 \, node id2 \, node
id3, f 31;
#X text 72 213 DELETE TRISET;
#X text 221 239 args: map \, triset id;
#X text 84 275 CREATE LINK;
#X text 235 298 args: map \, link node \, target node \, weight;
#X msg 86 299 link_create 0 0 1;
#X text 266 318 optional arg: weight;
#X text 266 337 default: 1;
#X text 193 85 defaults: 0 \, 0 \, 1 \, 1 \, 1;
#X text 95 348 DELETE LINK;
#X text 245 374 args: map \, link node \, target node;
#X text 778 19 EDIT NODE PROPERTIES;
#X text 536 55 node id;
#X text 697 55 node id;
#X text 875 55 node id;
#X text 1082 54 node id;
#X text 799 278 EDIT LINK WEIGHT;
#X floatatom 773 335 5 0 0 0 - - -, f 5;
#X floatatom 862 335 5 0 0 0 - - -, f 5;
#X obj 798 364 t b f;
#X obj 861 364 t b f;
#X floatatom 944 335 5 0 0 0 - - -, f 5;
#X obj 773 396 pack 0 1 1, f 16;
#X text 940 309 weight;
#X text 755 309 link node;
#X text 839 309 target node;
#X msg 773 428 link_weight 0 \$1 \$2 \$3;
#X obj 826 226 s auth_out;
#X obj 94 513 r auth_out;
#X obj 773 462 s auth_out;
#X text 172 418 ERASE ALL MAP ELEMENTS;
#X msg 174 445 clear_map 0;
#X text 275 445 arg: map;
#X text 49 687 node types: 1 = speaker \, 2 = virtual \, 3 = derived
\, 4 = silent, f 64;
#X connect 0 0 4 0;
#X connect 1 0 4 0;
#X connect 2 0 4 0;
#X connect 3 0 4 0;
#X connect 5 0 4 0;
#X connect 6 0 72 0;
#X connect 7 0 9 0;
#X connect 8 0 10 0;
#X connect 9 0 6 0;
#X connect 10 0 9 0;
#X connect 10 1 9 1;
#X connect 12 0 14 0;
#X connect 13 0 15 0;
#X connect 14 0 17 0;
#X connect 15 0 14 0;
#X connect 15 1 14 1;
#X connect 17 0 72 0;
#X connect 18 0 20 0;
#X connect 19 0 21 0;
#X connect 20 0 22 0;
#X connect 21 0 20 0;
#X connect 21 1 20 1;
#X connect 22 0 72 0;
#X connect 24 0 27 0;
#X connect 25 0 26 0;
#X connect 26 0 27 0;
#X connect 26 1 27 1;
#X connect 27 0 32 0;
#X connect 28 0 27 0;
#X connect 28 1 27 2;
#X connect 30 0 28 0;
#X connect 32 0 72 0;
#X connect 33 0 4 0;
#X connect 34 0 4 0;
#X connect 35 0 4 0;
#X connect 50 0 4 0;
#X connect 62 0 67 0;
#X connect 63 0 64 0;
#X connect 64 0 67 0;
#X connect 64 1 67 1;
#X connect 65 0 67 0;
#X connect 65 1 67 2;
#X connect 66 0 65 0;
#X connect 67 0 71 0;
#X connect 71 0 74 0;
#X connect 73 0 4 0;
#X connect 76 0 4 0;
#X restore 533 664 pd Map_Authoring;
#X connect 0 0 10 0;
#X connect 1 0 9 0;
#X connect 4 0 7 0;
#X connect 5 0 4 0;
#X connect 6 0 11 0;
#X connect 7 0 28 0;
#X connect 9 0 28 0;
#X connect 10 0 28 0;
#X connect 11 0 4 0;
#X connect 11 1 4 1;
#X connect 12 0 28 0;
#X connect 13 0 28 0;
#X connect 14 0 28 0;
#X connect 15 0 28 0;
#X connect 16 0 28 0;
#X connect 17 0 16 0;
#X connect 18 0 28 0;
#X connect 19 0 18 0;
#X connect 20 0 28 0;
#X connect 21 0 20 0;
#X connect 22 0 23 0;
#X connect 23 0 28 0;
#X connect 24 0 25 0;
#X connect 25 0 28 0;
#X connect 26 0 27 0;
#X connect 27 0 28 0;
#X connect 28 0 3 0;
#X connect 28 1 2 0;
#X connect 45 0 28 0;
#X connect 46 0 28 0;
#X connect 60 0 28 0;
